/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export type Uint128 = string;
export interface InstantiateMsg {
  params: OpenEditionMinterFactoryParams;
}
export interface OpenEditionMinterFactoryParams {
  admin: Addr;
  fee_collector_address: Addr;
  multi_minter_params?: MultiMinterParams | null;
  oem_product_label: string;
  open_edition_minter_code_id: number;
  open_edition_minter_creation_fee: Coin;
}
export interface MultiMinterParams {
  multi_minter_code_id: number;
  multi_minter_creation_fee: Coin;
  multi_minter_product_label: string;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  create_open_edition_minter: {
    msg: MinterInstantiateMsgForOpenEditionMinterInitExtention;
  };
} | {
  create_multi_mint_open_edition_minter: {
    msg: MinterInstantiateMsgForEmpty;
  };
} | {
  update_admin: {
    admin: string;
  };
} | {
  update_fee_collector_address: {
    fee_collector_address: string;
  };
} | {
  update_open_edition_minter_creation_fee: {
    open_edition_minter_creation_fee: Coin;
  };
} | {
  update_open_edition_minter_code_id: {
    open_edition_minter_code_id: number;
  };
} | {
  update_multi_minter_creation_fee: {
    multi_minter_creation_fee: Coin;
  };
} | {
  update_multi_minter_code_id: {
    multi_minter_code_id: number;
  };
} | {
  pause: {};
} | {
  unpause: {};
} | {
  set_pausers: {
    pausers: string[];
  };
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type Decimal = string;
export interface MinterInstantiateMsgForOpenEditionMinterInitExtention {
  auth_details: AuthDetails;
  collection_details: CollectionDetails;
  init: OpenEditionMinterInitExtention;
  token_details?: TokenDetails | null;
}
export interface AuthDetails {
  admin: Addr;
  payment_collector: Addr;
}
export interface CollectionDetails {
  collection_name: string;
  data?: string | null;
  description?: string | null;
  id: string;
  preview_uri?: string | null;
  royalty_receivers?: WeightedAddress[] | null;
  schema?: string | null;
  symbol: string;
  uri?: string | null;
  uri_hash?: string | null;
}
export interface WeightedAddress {
  address: string;
  weight: string;
  [k: string]: unknown;
}
export interface OpenEditionMinterInitExtention {
  end_time?: Timestamp | null;
  mint_price: Coin;
  num_tokens?: number | null;
  per_address_limit?: number | null;
  start_time: Timestamp;
  whitelist_address?: string | null;
}
export interface TokenDetails {
  base_token_uri: string;
  data?: string | null;
  description?: string | null;
  extensible: boolean;
  nsfw: boolean;
  preview_uri?: string | null;
  royalty_ratio: Decimal;
  token_name: string;
  transferable: boolean;
}
export interface MinterInstantiateMsgForEmpty {
  auth_details: AuthDetails;
  collection_details: CollectionDetails;
  init: Empty;
  token_details?: TokenDetails | null;
}
export interface Empty {
  [k: string]: unknown;
}
export type QueryMsg = {
  params: {};
} | {
  is_paused: {};
} | {
  pausers: {};
};
export type Boolean = boolean;
export interface ParamsResponse {
  params: OpenEditionMinterFactoryParams;
}
export type ArrayOfAddr = Addr[];