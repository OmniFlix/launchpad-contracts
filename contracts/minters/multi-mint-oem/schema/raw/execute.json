{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "mint"
      ],
      "properties": {
        "mint": {
          "type": "object",
          "properties": {
            "drop_id": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "mint_admin"
      ],
      "properties": {
        "mint_admin": {
          "type": "object",
          "required": [
            "recipient"
          ],
          "properties": {
            "drop_id": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "recipient": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_royalty_ratio"
      ],
      "properties": {
        "update_royalty_ratio": {
          "type": "object",
          "required": [
            "ratio"
          ],
          "properties": {
            "drop_id": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "ratio": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_mint_price"
      ],
      "properties": {
        "update_mint_price": {
          "type": "object",
          "required": [
            "mint_price"
          ],
          "properties": {
            "drop_id": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "mint_price": {
              "$ref": "#/definitions/Coin"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_whitelist_address"
      ],
      "properties": {
        "update_whitelist_address": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "drop_id": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "pause"
      ],
      "properties": {
        "pause": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "unpause"
      ],
      "properties": {
        "unpause": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_pausers"
      ],
      "properties": {
        "set_pausers": {
          "type": "object",
          "required": [
            "pausers"
          ],
          "properties": {
            "pausers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "new_drop"
      ],
      "properties": {
        "new_drop": {
          "type": "object",
          "required": [
            "mint_price",
            "per_address_limit",
            "start_time",
            "token_name"
          ],
          "properties": {
            "base_uri": {
              "type": [
                "string",
                "null"
              ]
            },
            "data": {
              "type": [
                "string",
                "null"
              ]
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "end_time": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Timestamp"
                },
                {
                  "type": "null"
                }
              ]
            },
            "extensible": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "mint_price": {
              "$ref": "#/definitions/Coin"
            },
            "nsfw": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "per_address_limit": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "preview_uri": {
              "type": [
                "string",
                "null"
              ]
            },
            "royalty_ratio": {
              "type": [
                "string",
                "null"
              ]
            },
            "start_time": {
              "$ref": "#/definitions/Timestamp"
            },
            "token_limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "token_name": {
              "type": "string"
            },
            "transferable": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "uri_hash": {
              "type": [
                "string",
                "null"
              ]
            },
            "whitelist_address": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_royalty_receivers"
      ],
      "properties": {
        "update_royalty_receivers": {
          "type": "object",
          "required": [
            "receivers"
          ],
          "properties": {
            "receivers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeightedAddress"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_denom"
      ],
      "properties": {
        "update_denom": {
          "type": "object",
          "properties": {
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "type": [
                "string",
                "null"
              ]
            },
            "preview_uri": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "purge_denom"
      ],
      "properties": {
        "purge_denom": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Timestamp": {
      "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
      "allOf": [
        {
          "$ref": "#/definitions/Uint64"
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    },
    "WeightedAddress": {
      "type": "object",
      "required": [
        "address",
        "weight"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        }
      }
    }
  }
}
